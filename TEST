drop procedure if exists testTable;
delimiter $$
create procedure testTable(
    title_param VARCHAR(255), 
releaseYear_param VARCHAR(255),
ageRating_param VARCHAR(255),
pub_param VARCHAR(255),
dev_param VARCHAR(255)
)
create temporary table tmp 
insert into tmp(Title, Release_Year, Age_Rating, Publisher, Developer)
select
v.Title, v.Release_Year, v.Age_Rating, v.Publisher, v.Developer 
from Video_Games v where (v.Age_Rating != 'T') and (v.Age_Rating != 'M');
end $$
delimiter ;

delimiter $$
drop procedure if exists getUserCred;
create procedure getUserCred(IN userID_p varchar(255))
begin
select*
from Users
where User_ID = userID;
end $$
delimiter ;

drop procedure if exists filterAge17;
delimiter $$
create procedure filterAge17()
begin
Select v.Title, v.Release_Year, v.Age_Rating, v.Genre, v.Developer 
from Video_Games v where (v.Age_Rating != 'M') limit 10;
end $$
delimiter ;

drop procedure if exists filterAge13;
delimiter $$
create procedure filterAge13()
begin
Select v.Title, v.Release_Year, v.Age_Rating, v.Genre, v.Developer 
from Video_Games v where (v.Age_Rating != T) and (v.Age_Rating != 'M') limit 10;
end $$
delimiter ;

drop procedure if exists filterSystem;
delimiter $$
create procedure filterSystem(
IN systemOwned_p varchar(255))
begin select 
g.Title, g.Release_Year, g.Age_Rating, g.Genre, g.Developer  
from Video_Games g where g.Game_ID in (select m.Game_ID from Made_For m where m.System_Name = systemOwned_p);
end $$
delimiter ;

delimiter $$
drop procedure if exists filterAnswers;
create procedure filterAnswers(IN rY1_p varchar(255), IN rY2_p varchar(255),
IN ageRating_p varchar(255), IN gen_p varchar(255), IN dev_p varchar(255))
begin
select Title, Release_Year, Age_Rating, Genre, Developer  
from Video_Games 
where (Release_Year >= rY1_p and ReleaseYear < rY2_p) and
(Age_Rating = ageRating_p) and (Developer = dev_P) and (Genre = gen_p);
end $$
delimiter ;


delimiter $$
drop procedure if exists finalOutput;
create procedure showPreferences()
begin
select g.Title, s.System_Name, g.Release_Year, g.Age_Rating,
g.Genre, g.Developer, avg(r.Score) as avgScore,
sum(r.Num_Reviews) as totalReviews
from Video_Games g
inner join Metacritic_Review r on r.Game_ID = g.Game_ID
inner join Made_For s on s.Game_ID = g.Game_ID 
where g.Game_ID = r.Game_ID and g.Game_ID = s.Game_ID
order by avgScore desc limit 10;
end $$
delimiter ;


drop procedure if exists showPreferences;
delimiter $$
create procedure showPreferences(IN userID_p varchar(255))
begin
select g.Title, g.Release_Year, g.Age_Rating, g.Genre, 
g.Developer
from Video_Games g
where g.Game_ID in (select p.Game_ID from Prefers p where 
p.User_ID in (select u.User_ID from Users u where u.User_ID = userID_p));
end $$
delimiter ;

drop procedure if exists showInfo;
delimiter $$
create procedure showInfo(
    IN userID_p varchar(255))
begin select
s.System_Name, sum(r.Num_of_Reviews) as totrevs, avg(r.Score) as avgrevs
from Video_Games g
inner join Metacritic_Review r on r.Game_ID = g.Game_ID
inner join Made_For s on s.Game_ID = g.Game_ID
where g.Game_ID in(select p.Game_ID from Prefers p where p.User_ID in 
(select u.User_ID from Users u where u.User_ID = userID_p));
end $$
delimiter ;

delimiter $$
drop procedure if exists filterPreferences;
create procedure filterPreferences(IN userID_p varchar(255), 
IN rY1_p varchar(255), IN rY2_p varchar(255), 
IN ageRating_p varchar(255), IN gen_p varchar(255), IN dev_p varchar(255))
begin
select g.Title, g.Release_Year, g.Age_Rating, g.Genre, g.Developer
from Video_Games g 
where ((g.Release_Year >= rY1_p and g.Release_Year < rY2_p) or
(g.Developer = dev_p) or (g.Genre = gen_p)) and 
g.Game_ID not in (select p.Game_ID from Prefers p where 
p.User_ID in (select u.User_ID from Users u where 
u.User_ID = userID_p)) limit 25;
end $$
delimiter ;